[{"/Users/feiyang/IdeaProjects/wines/client/src/reportWebVitals.js":"1","/Users/feiyang/IdeaProjects/wines/client/src/App.js":"2","/Users/feiyang/IdeaProjects/wines/client/src/Components/search.js":"3","/Users/feiyang/IdeaProjects/wines/client/src/index.js":"4","/Users/feiyang/IdeaProjects/wines/client/src/Components/detail.js":"5","/Users/feiyang/IdeaProjects/wines/client/src/Components/Detail.js":"6","/Users/feiyang/IdeaProjects/wines/client/src/Components/Search.js":"7"},{"size":362,"mtime":1611291551948,"results":"8","hashOfConfig":"9"},{"size":617,"mtime":1611502750263,"results":"10","hashOfConfig":"9"},{"size":5333,"mtime":1611504862975,"results":"11","hashOfConfig":"9"},{"size":500,"mtime":1611307575439,"results":"12","hashOfConfig":"9"},{"size":9646,"mtime":1611504877505,"results":"13","hashOfConfig":"9"},{"size":9645,"mtime":1611499373232,"results":"14","hashOfConfig":"9"},{"size":5394,"mtime":1611499537966,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1133ax6",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/feiyang/IdeaProjects/wines/client/src/reportWebVitals.js",[],"/Users/feiyang/IdeaProjects/wines/client/src/App.js",[],"/Users/feiyang/IdeaProjects/wines/client/src/Components/search.js",["32"],"import React, { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\n\nimport { InputBase,\n    Divider,\n    List,\n    ListItem,\n    ListItemText,\n    ListItemSecondaryAction \n} from '@material-ui/core';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport wineIcon from '../assets/wine.svg';\n    \nconst SEARCH_URL = \"http://localhost:8080/api/search/\";\n\nconst INITIAL_STATE = {\n    query : \"\",\n    cancel : \"\",\n    results : []\n}\n\nconst styles = () => ({\n    container: {\n        height: \"100%\",\n        position: \"fixed\",\n        margin : \"10% auto\",\n        left: 0,\n        right: 0,\n        textAlign: \"center\",\n    },\n    title: {\n        fontFamily: \"Montserrat\",\n        fontStyle: \"normal\",\n        fontWeight: 300,\n        fontSize: 26,\n        color: \"#0F1010\",\n    },\n    wineIcon: {\n        color: \"#3A3B3B\",\n        height: 22,\n        width: 16,\n        marginLeft: 12,\n    },\n    searchInput: {\n        width: 624,\n        height: 48,\n        background: \"#FFFFFF\",\n        border: \"rgba(255, 255, 255, 0.514)\",\n        borderRadius: 3,\n        marginTop: 24,\n        alignSelf: \"center\",\n    },\n    searchIcon: {\n        color: \"#CCC\",\n        fontStyle: \"normal\",\n        fontWeight: \"normal\",\n        fontSize: 20,\n        marginLeft: 12,\n        marginRight: 8,\n    },\n    list: {\n        width: 624,\n        backgroundColor: \"#fff\",\n        position: \"fixed\",\n        margin : \"0 auto\",\n        paddingTop: 0,\n        paddingBottom: 0,\n        left: 0,\n        right: 0,\n        border: \"1px #f5f5f54d solid\",\n        borderRadius: 2,\n        boxShadow: \"0px 0px 3px #e2dede\"\n    },\n    listItem: {\n        height: 56\n    },\n    listItemTitle: {\n        fontFamily: \"Montserrat\",\n        fontStyle: \"normal\",\n        fontWeight: 400,\n        fontSize: 15,\n        color: \"#0F1010\",\n    },\n    listItemDes: {\n        fontFamily: \"Montserrat\",\n        fontStyle: \"normal\",\n        fontWeight: 300,\n        fontSize: 13,\n        color: \"#3A3B3B\",\n    },\n    smallText: {\n        fontFamily: \"Montserrat\",\n        fontStyle: \"normal\",\n        fontWeight: 300,\n        fontSize: 13,\n        color: \"#0F1010\",\n        opacity: 0.6,\n    },\n    link: {\n        color: \"inherit\",\n        textDecoration: \"inherit\",\n    }\n  });\n\nfunction Search(props) {\n\n    const [state, setState] = useState(INITIAL_STATE);\n    const { classes } = props;\n    const { query, cancel, results } = state;\n\n    useEffect(() => {\n        const searchUrl = `${SEARCH_URL}${query}`;\n        cancel ? cancel.cancel() : setState({\n            ...state,\n            cancel : axios.CancelToken.source()\n        })\n    \n        axios\n            .get(searchUrl, {\n                cancelToken: cancel.token,\n            })\n            .then((res) => {\n                setState({\n                    ...state,\n                    results : res.data,\n                })\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, [query])\n\n    const Item = ( { result, i } ) => (\n        <Link \n        className={classes.link} \n        to={`/detail/${result.lotCode}`}>\n            <ListItem className={classes.listItem} button key={i}>\n                <ListItemText \n                classes={{ \n                    primary: classes.listItemTitle,\n                    secondary: classes.listItemDes,\n                }}\n                primary={result.lotCode} \n                secondary={result.description} />\n                <ListItemSecondaryAction>\n                    <div className={classes.smallText}>{result.volume.toLocaleString('en')}</div>\n                    <div className={classes.smallText}>{result.tankCode}</div>\n                </ListItemSecondaryAction>\n            </ListItem>\n        </Link>\n    );\n\n    return (\n        <div className={classes.container}>\n            <div className={classes.title}>Wine search<img src={wineIcon} alt=\"Wine Icon\" className={classes.wineIcon} /></div>\n            <InputBase\n                className={classes.searchInput}\n                placeholder=\"Search by lot code and description......\"\n                startAdornment={<SearchIcon className={classes.searchIcon}/>}\n                value={query}\n                onChange={ (event) => {\n                    const query = event.target.value;\n                    query ? setState({\n                        ...state,\n                        query,\n                    }) : setState({\n                        ...state,\n                        query,\n                        results : [],\n                    })\n                }}\n            />\n            {results.length > 0 ? \n            <List className={classes.list} aria-label=\"cards\">\n                {results.map((result, i) => (\n                    results.length !== i + 1 ?  (\n                        <React.Fragment key={i}>\n                            <Item result={result} key={i}/>\n                            <Divider variant=\"middle\" />\n                        </React.Fragment>\n                     ) : (\n                        <Item result={result} key={i}/>\n                     )\n                ))}\n            </List> :\n            null\n        }\n        </div>\n    );\n}\n\nexport default withStyles(styles)(Search);","/Users/feiyang/IdeaProjects/wines/client/src/index.js",[],"/Users/feiyang/IdeaProjects/wines/client/src/Components/detail.js",["33"],"import React, { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport { Fab, \n    Avatar, \n    Tabs, \n    Tab,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    Grid, } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst DETAIL_URL = \"http://localhost:8080/api/detail/\";\nconst BREAKDOWN_URL = \"http://localhost:8080/api/breakdown/\";\nconst TYPE_YEAR = \"year\";\nconst TYPE_VARIETY = \"variety\";\nconst TYPE_REGION = \"region\";\nconst TYPE_YEAR_VARIETY = \"year-variety\";\n\nconst INITIAL_STATE = {\n    detail: {},\n    breakdown : [],\n    type : TYPE_YEAR,\n    index : 0,\n    showIndex : {\n        \"year\" : 0,\n        \"variety\" : 0,\n        \"region\" : 0,\n        \"year-variety\" : 0\n    },\n    showList: {\n        \"year\" : [],\n        \"variety\" : [],\n        \"region\" : [],\n        \"year-variety\" : []\n    }\n}\n\nconst TYPE_INDEX_MAP = {\n    0 : { \n            type : TYPE_YEAR,\n            display : 'Year'\n        },\n    1 : { \n            type : TYPE_VARIETY,\n            display : 'Variety'\n        },\n    2 : { \n            type : TYPE_REGION,\n            display : 'Region'\n        },\n    3 : { \n            type : TYPE_YEAR_VARIETY,\n            display : 'Year & Variety'\n        },\n}\n\nconst LIMIT = 5;\n\nconst styles = () => ({\n    container: {\n        height: \"100%\",\n        width: \"50%\",\n        position: \"fixed\",\n        margin : \"2rem auto\",\n        left: 0,\n        right: 0,\n        fontFamily: \"Montserrat\",\n        fontStyle: \"normal\",\n    },\n    titleSection: {\n        fontWeight: 300,\n        fontSize: 30,\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'flex-end',\n    },\n    titleLeft: {\n        display : 'flex',\n        flexDirection: 'row',\n    },\n    avatar: {\n        backgroundColor: '#cb617e',\n        border: \"1px #c76781 solid\",\n        fontFamily: \"Montserrat\",\n        fontWeight: 400,\n        marginRight: 20\n    },\n    fab: {\n        backgroundColor: '#00ADA8',\n        color: '#fff',\n    },\n    backIcon: {\n        marginLeft: 10,\n    },\n    des: {\n        color: '#242525',\n        fontStyle: 'normal',\n        fontWeight: 300,\n        fontSize: 18,\n        marginTop: 10,\n        marginLeft: 5\n    },\n    info: {\n        display: 'flex',\n        flexDirection: 'column',\n        padding: 20\n    },\n    infoRow: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: 5,\n        fontSize: '1rem',\n    },\n    infoField: {\n        fontWeight: 400,\n        fontSize: 15\n    },\n    infoValue: {\n        fontWeight: 300\n    },\n    tableContainer: {\n        overflow: 'auto',\n        maxHeight: 330,\n    },\n    tableRow: {\n        height : 40,\n    },\n    tableCell: {\n        fontFamily: \"Montserrat\",\n        height: \"auto !important\",\n    },\n    tableBody: {\n        fontWeight: 300\n    },\n    tableHead: {\n        fontWeight: 400,\n    },\n    showMore: {\n        \n    },\n    showMoreCell : {\n        color : \"#00928D\",\n        fontFamily : \"Montserrat\",\n        fontStyle : \"normal\",\n        fontWeight : \"normal\",\n        fontSize : 14,\n        justifyContent: 'center',\n        '&:hover': {\n            cursor: 'pointer'\n          },\n    }\n})\n\nconst AntTabs = withStyles({\n    root: {\n      borderBottom: '1px solid #e1e1e1',\n    },\n    indicator: {\n      backgroundColor: '#00ada8',\n    },\n})(Tabs);\n\nconst AntTab = withStyles(() => ({\n    root: {\n      textTransform: 'none',\n      minWidth: 60,\n      fontSize: 15,\n      fontWeight: 300,\n      marginRight: 28,\n      color: '#3A3B3B',\n      fontFamily: [\n        'Montserrat',\n        'Arial',\n        'sans-serif',\n      ].join(','),\n      '&:hover': {\n        color: '#black',\n        opacity: 1,\n      },\n      '&$selected': {\n        color: '#0F1010',\n        fontWeight: 400,\n      },\n      '&:focus': {\n        color: '#0F1010',\n      },\n    },\n    selected: {},\n}))((props) => <Tab disableRipple {...props} />);\n\nfunction Detail(props) {\n\n    const lotCode = props.match.params.lotCode\n    const [state, setState] = useState(INITIAL_STATE);\n    const { detail, breakdown, type, index, showIndex , showList} = state;\n    const { classes } = props; \n\n    const showMore = () =>{\n        let newIndex = showIndex[type] + LIMIT\n        let newIndexField = {};\n        newIndexField[type] = newIndex;\n\n        let newShowList = newIndex + 1 + LIMIT >= breakdown.length? breakdown : breakdown.slice(0, newIndex);\n        let newField= {};\n        newField[type] = newShowList;\n\n        setState({\n            ...state,\n            showIndex : {\n                ...showIndex,\n                ...newIndexField\n            },\n            showList : {\n                ...showList,\n                ...newField,\n            }\n        })\n    };\n\n    const handleChange = (event, newIndex) => {\n        setState({\n            ...state,\n            index : newIndex,\n            type: TYPE_INDEX_MAP[newIndex].type,\n        })\n    };\n\n    useEffect(() => {\n        const detailUrl = `${DETAIL_URL}${lotCode}`;\n        const breakdownUrl = `${BREAKDOWN_URL}${type}/${lotCode}`;\n        \n        (async() => {\n            const resDetail = await axios(detailUrl);\n            const resBreakdown = await axios(breakdownUrl);\n\n            let newField= {};\n            newField[type] = showIndex[type] === 0 ? \n            resBreakdown.data.breakdown.slice(0, LIMIT) : \n            showIndex[type] + 1 + LIMIT >= resBreakdown.data.breakdown.length ?\n            resBreakdown.data.breakdown :\n            resBreakdown.data.breakdown.slice(0, showIndex[type])\n\n            setState({\n                ...state,\n                detail : resDetail.data,\n                breakdown : resBreakdown.data.breakdown,\n                showList: { \n                    ...showList,\n                    ...newField\n                }\n            })\n        })();\n    }, [type]);\n\n    return (\n        <div className={classes.container}>\n            <Link className={classes.backIcon} to=\"/\"><ArrowBackIcon /></Link>\n            <div className={classes.titleSection}>\n                <div className={classes.titleLeft}>\n                    <Avatar className={classes.avatar}>W</Avatar>\n                    {detail.lotCode}\n                </div>\n                <Fab className={classes.fab} size=\"large\" aria-label=\"edit\">\n                    <EditIcon />\n                </Fab>\n            </div>\n            <div className={classes.des}>{detail.description}</div>\n            <div className={classes.info}>\n                <div className={classes.infoRow}>\n                    <div className={classes.infoField}>Volume</div>\n                    <div className={classes.infoValue}>{detail.volume? detail.volume.toLocaleString('en')+\"L\" : \"\"}</div>\n                </div>\n                <div className={classes.infoRow}>\n                    <div className={classes.infoField}>Tank Code</div>\n                    <div className={classes.infoValue}>{detail.tankCode}</div>\n                </div>\n                <div className={classes.infoRow}>\n                    <div className={classes.infoField}>Product State</div>\n                    <div className={classes.infoValue}>{detail.productState}</div>\n                </div>\n                <div className={classes.infoRow}>\n                    <div className={classes.infoField}>Owner</div>\n                    <div className={classes.infoValue}>{detail.ownerName}</div>\n                </div>\n            </div>\n            <AntTabs value={index} onChange={handleChange}>\n                {Object.keys(TYPE_INDEX_MAP).map((key) => (\n                    <AntTab key={key} label={TYPE_INDEX_MAP[key].display} />\n                ))}\n            </AntTabs>\n            <TableContainer component={Paper} className={classes.tableContainer}>\n                <Table stickyHeader>\n                    <TableHead className={classes.tableHead}>\n                        <TableRow className={classes.tableRow}>\n                            <TableCell className={classes.tableCell}>{TYPE_INDEX_MAP[index].display}</TableCell>\n                            <TableCell className={classes.tableCell} align=\"right\">Percentage</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody className={classes.tableBody}>\n                        {showList[type] ? showList[type].map((row,i) => (\n                            <TableRow key={i} className={classes.tableRow}>\n                                <TableCell className={classes.tableCell}>{row[type]}</TableCell>\n                                <TableCell className={classes.tableCell} align=\"right\">{row.percentage}</TableCell>\n                            </TableRow>\n                        ))\n                        : null}\n                    { showList[type] && (showList[type].length < breakdown.length) \n                    &&  <TableRow>\n                            <TableCell onClick={showMore} colSpan={2}>\n                                <Grid colSpan={2} className={classes.showMoreCell} container direction=\"row\" alignItems=\"center\">\n                                    Show More<ExpandMoreIcon />\n                                </Grid>\n                            </TableCell>\n                        </TableRow>}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    )\n}\n\nexport default withStyles(styles)(Detail);","/Users/feiyang/IdeaProjects/wines/client/src/Components/Detail.js",["34","35"],"/Users/feiyang/IdeaProjects/wines/client/src/Components/Search.js",["36","37"],{"ruleId":"38","severity":1,"message":"39","line":134,"column":8,"nodeType":"40","endLine":134,"endColumn":15,"suggestions":"41"},{"ruleId":"38","severity":1,"message":"42","line":263,"column":8,"nodeType":"40","endLine":263,"endColumn":14,"suggestions":"43"},{"ruleId":"44","severity":1,"message":"45","line":247,"column":46,"nodeType":"46","messageId":"47","endLine":247,"endColumn":48},{"ruleId":"38","severity":1,"message":"42","line":263,"column":8,"nodeType":"40","endLine":263,"endColumn":14,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":113,"column":11,"nodeType":"51","messageId":"52","endLine":113,"endColumn":31},{"ruleId":"38","severity":1,"message":"39","line":137,"column":8,"nodeType":"40","endLine":137,"endColumn":15,"suggestions":"53"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cancel' and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.","ArrayExpression",["54"],"React Hook useEffect has missing dependencies: 'lotCode', 'showIndex', 'showList', and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["55"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["56"],"no-unused-vars","'hightlightSearchText' is assigned a value but never used.","Identifier","unusedVar",["57"],{"desc":"58","fix":"59"},{"desc":"60","fix":"61"},{"desc":"60","fix":"62"},{"desc":"58","fix":"63"},"Update the dependencies array to be: [cancel, query, state]",{"range":"64","text":"65"},"Update the dependencies array to be: [lotCode, showIndex, showList, state, type]",{"range":"66","text":"67"},{"range":"68","text":"67"},{"range":"69","text":"65"},[3068,3075],"[cancel, query, state]",[6099,6105],"[lotCode, showIndex, showList, state, type]",[6097,6103],[3129,3136]]